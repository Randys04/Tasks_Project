// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tasks_Project;

#nullable disable

namespace tasks_Project.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230929022056_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("tasks_Project.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c7bd"),
                            Name = "Univesrity homeworks to do",
                            Weight = 30
                        },
                        new
                        {
                            CategoryId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c723"),
                            Name = "Personal Activities",
                            Weight = 25
                        });
                });

            modelBuilder.Entity("tasks_Project.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CompletedTask")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c675"),
                            CategoryId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c7bd"),
                            CompletedTask = false,
                            CreationDate = new DateTime(2023, 9, 28, 20, 20, 55, 945, DateTimeKind.Local).AddTicks(5539),
                            TaskPriority = 0,
                            Title = "IO homewework 1"
                        },
                        new
                        {
                            TaskId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c602"),
                            CategoryId = new Guid("13e9bff2-1e86-45b2-8a62-bb932992c723"),
                            CompletedTask = false,
                            CreationDate = new DateTime(2023, 9, 28, 20, 20, 55, 945, DateTimeKind.Local).AddTicks(5557),
                            TaskPriority = 2,
                            Title = "Prepare a presentation"
                        });
                });

            modelBuilder.Entity("tasks_Project.Models.Task", b =>
                {
                    b.HasOne("tasks_Project.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("tasks_Project.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
